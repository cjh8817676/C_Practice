使用 #define的理由:

1. 使用 #define可以產生有效而易懂的程式,例如”x1B(C”使游標 向右移一格,在程式中採用”x1B(C" 或是"CURSOR_RIBHT” 二者那一個容易了解呢?
因此利用下述的前置命令:
#define SURSOR_RIGHT "\x1B(C" 當程式中遇到 CURSOR -RIGHT時,則會在編譯之前被替換為"\x1B(C" o 

2. 提供簡短的表示式取代較長的字串,或者出現多次的字串,#define不僅可用於常数,也可用來取代任何的片語。

例如 #define ERROR printf("\nError.\n");

假設常数 3.14159在程式中出現很多次,而現在想要使用更高的 精確度,將3.14159 改為3.14 1592,如果利用前置命令時祇要更改 #define PI 3.141592

这项改變將會在編譯之前自動修正所有出現PI 的地方。 3. macro (巨集)的執行速度比函數的方式要快;
---------------------------------------------------------------------------------------------------

#undef directive

#undef 的執行將使被defined 過的Name 自本行開始解除 define 的其格式如下:

#undef defined-Name